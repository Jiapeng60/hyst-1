# Created by Hyst v1.2
# Hybrid Automaton in Flow*
# Converted from file: /home/stan/repositories/hyst/src/tests/regression/models/hybridized/hybridized_phaver.xml
# Command Line arguments: /home/stan/repositories/hyst/src/tests/regression/models/hybridized/hybridized_phaver.xml -o /home/stan/repositories/hyst/src/tests/regression/result/hybridized_phaver_flowstar.flowstar -flowstar


hybrid reachability
{
    # Vars
    state var x, y, t, _x_interval, _y_interval

    setting
    {
        fixed steps 0.001
        time 10
        remainder estimation 1e-4
        identity precondition
        gnuplot octagon x,y
        adaptive orders { min 3, max 8 } 
        cutoff 1e-15
        precision 53
        output out
        max jumps 2
        print on
    }

    modes
    {
        Mode0_0
        {
            linear ode
            {
                x' = 1 * y + _x_interval
                y' = -1.286529 * x + 0.806218 * y + _y_interval
                t' = 1
                _x_interval' = 0
                _y_interval' = 0
            }
            inv
            {
                # Original invariant: 0 <= t & t <= 1 & 0.2474 <= x & x <= 0.6330128462466275 & 0.24679590044085573 <= y & y <= 0.4041 & _x_interval <= 0 & _x_interval >= 0 & _y_interval <= 0.130989 & _y_interval >= 0.103606

                0 - (t) <= 0   t <= 1   0.2474 - (x) <= 0   x <= 0.6330128462466275   0.24679590044085573 - (y) <= 0   y <= 0.4041   _x_interval <= 0   _x_interval >= 0   _y_interval <= 0.130989   _y_interval >= 0.103606
            }
        }

        Mode0_1
        {
            linear ode
            {
                x' = 1 * y + _x_interval
                y' = -0.882432 * x + 0.648037 * y + _y_interval
                t' = 1
                _x_interval' = 0
                _y_interval' = 0
            }
            inv
            {
                # Original invariant: 1 <= t & t <= 2 & 0.5535167768234619 <= x & x <= 0.6330128462466275 & -0.45015565646868044 <= y & y <= 0.25198369640935786 & _x_interval <= 0 & _x_interval >= 0 & _y_interval <= -0.05248 & _y_interval >= -0.085595

                1 - (t) <= 0   t <= 2   0.5535167768234619 - (x) <= 0   x <= 0.6330128462466275   -0.45015565646868044 - (y) <= 0   y <= 0.25198369640935786   _x_interval <= 0   _x_interval >= 0   _y_interval <= -0.05248   _y_interval >= -0.085595
            }
        }
    }

    jumps
    {
        Mode0_0 -> Mode0_1
        guard
        {
            # Original guard: t <= 1

            t <= 1
        }
        reset
        {
            _x_interval' := 0 + [0, 0]
            _y_interval' := 0 + [-0.085595, -0.05248]
        }
        parallelotope aggregation {}
    }

    init
    {
        Mode0_0
        {
            t in [0, 0]
            _x_interval in [0, 0]
            _y_interval in [0.103606, 0.130989]
            y in [0.4, 0.4]
            x in [0.25, 0.25]
        }
    }
}
